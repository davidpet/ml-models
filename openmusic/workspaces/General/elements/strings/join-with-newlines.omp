; OM File Header - Saved 2023/01/17 11:00:09
; (7.01 :patc (om-make-point 442 10) (om-make-point 50 50) (om-make-point 500 360) "" 183 0 "2023/01/15 14:34:50" "2023/01/15 14:44:28")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "join-with-newlines" (quote ((let ((box (om-load-boxout "output" 0 (om-make-point 337 301) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) "joined" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "list" (quote list) (quote nil) (om-make-point 32 148) (om-make-point 91 28) "~{~a~%~}" "\"~{~a~%~}\"" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "FORMAT" (quote format) (quote ((om-load-inputfun (quote input-funbox) "DESTINATION" "DESTINATION" nil) (om-load-inputfun (quote input-funbox) "CONTROL-STRING" "CONTROL-STRING" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 289 221) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "items" 0 (om-make-point 227 64) "" "items" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((2 0 0 0 nil 0) (1 0 2 1 nil 0) (3 0 2 2 nil 0))) nil 7.01))
